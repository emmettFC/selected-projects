
# --------- fishViz build inference graph for pretrained mobilenet application in tensorflow

# This set of instructions begins after you have built the XML annotations from the motion detection process

# make directory ./data in the tensorflow/models/research/object-detection directory

    cd tensorflow/models/research/object-detection/
    mkdir ./data

# after building labeled image set; divide images into training and testing sets

    test --> ./test_images
    train --> ./train_images

# clone handy github repository with tf record functionality and xml_to_csv utility

    https://github.com/datitran/raccoon_dataset/blob/386a8f4f1064ea0fe90cfac8644e0dba48f0387b/test_generate_tfrecord.py
    https://github.com/datitran/raccoon_dataset/blob/386a8f4f1064ea0fe90cfac8644e0dba48f0387b/xml_to_csv.py

# run the following from the foundFrames directory

    xml_to_csv.py
    generate_tfrecord.py
    cp ./*_labels TFPATH/models/research/object-detection/data/

# after you built the test.record and train.record files, from object detection directory: 

    wget https://raw.githubusercontent.com/tensorflow/models/master/object_detection/samples/configs/ssd_mobilenet_v1_pets.config

    wget http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_coco_11_06_2017.tar.gz

# rename model for specific project and run: 

    python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v1_carps.config

# let the model converge to less than 1 -- or 10000 steps -- then export the frozen inference graph with checkpoint

    python export_inference_graph.py \
        --input_type image_tensor \
        --pipeline_config_path training/ssd_mobilenet_v1_carps.config \
        --trained_checkpoint_prefix training/model.ckpt-2856 \
        --output_directory carp_graph

# now youâ€™re ready to run and check the performance of the model
	python implementTfObjectDetection.py 

