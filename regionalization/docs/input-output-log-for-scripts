

# -- 
# Output & Input / Items to delete

subset-weibo-data.py 
input: angel_de.txt, beijing.geojson
output: inLabelRegionPoints.py

optimize-grib-som-clustering.py 
input: beijing.geojson, inLabelRegionPoints.csv 
output: dbi-scores-for-pq-inits-std.csv, dbi-std-score-over-N.png

clusterSOM-tesselateVoronoi.py 
input: beijing.geojson, inLabelRegionPoints.csv
output: voronoi-polygons-9-11-npd-finite-only.csv, weibo-dat-with-polygon-labels.csv
plots: finite-polygons-centroids-weibo-scatter.png, all-polygons-centroids-weibo-scatter.png

aggregate-polygon-weibos.py
input: data/weibo-dat-with-polygon-labels.csv
output: day_hour_vectors.csv, week_hour_vectors.csv, day_segment_vectors.csv, week_segment_vectors.csv

pca-kmeans-polygons-vectors.py
input: day_hour_vectors.csv, week_hour_vectors.csv, day_segment_vectors.csv, week_segment_vectors.csv



# -- 
# Test dims of csv files

def fixLstring(row): 
    v = row['combined']
    s = v[1:-1].split(', ')
    s = [np.float(i) for i in s]
    return s

dhv = pd.read_csv('./data/day-hour-vectors.csv')
dhv['combined_list'] = dhv.apply(lambda row: fixLstring(row), axis=1)
len(dhv.iloc[0].combined_list) # 168 dim, correct

dsv = pd.read_csv('./data/day-segment-vectors.csv')
dsv['combined_list'] = dsv.apply(lambda row: fixLstring(row), axis=1)
len(dsv.iloc[0].combined_list) # 504 dim, correct

whv = pd.read_csv('./data/week-hour-vectors.csv')
whv['combined_list'] = whv.apply(lambda row: fixLstring(row), axis=1)
len(whv.iloc[0].combined_list) # 48 dim, correct

wsv = pd.read_csv('./data/week-segment-vectors.csv')
wsv['combined_list'] = wsv.apply(lambda row: fixLstring(row), axis=1)
len(wsv.iloc[0].combined_list) # 144 dim, correct


